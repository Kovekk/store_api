{
  "swagger": "2.0",
  "info": {
    "title": "Store API",
    "description": "Create, update, get, and delete store data through this API.",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "authorizationUrl": "https://example.com/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "write:store": "Modify store data",
        "read:store": "Read store data"
      }
    }
  },
  "paths": {
    "/employees/": {
      "get": {
        "tags": [
          "Employees"
        ],
        "description": "Retrieve a list of employees.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["read:store"]
          }
        ]
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "description": "Create a new employee.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Employee data to be created.",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "First name of the employee.",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name of the employee.",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "description": "Email address of the employee.",
                  "example": "john.doe@example.com"
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number of the employee.",
                  "example": "+123456789"
                },
                "position": {
                  "type": "string",
                  "description": "Position of the employee in the company.",
                  "example": "Software Engineer"
                },
                "salary": {
                  "type": "number",
                  "description": "Salary of the employee.",
                  "example": 60000
                },
                "hire_date": {
                  "type": "string",
                  "description": "Hire date of the employee.",
                  "example": "2023-01-01"
                },
                "department": {
                  "type": "string",
                  "description": "Department where the employee works.",
                  "example": "Engineering"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["write:store"]
          }
        ]
      }
    },
    "/employees/{id}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "description": "Retrieve a specific employee by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the employee to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["read:store"]
          }
        ]
      },
      "put": {
        "tags": [
          "Employees"
        ],
        "description": "Update an existing employee by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the employee to update."
          },
          {
            "name": "body",
            "in": "body",
            "description": "Employee data to be updated.",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "First name of the employee.",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name of the employee.",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "description": "Email address of the employee.",
                  "example": "john.doe@example.com"
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number of the employee.",
                  "example": "+123456789"
                },
                "position": {
                  "type": "string",
                  "description": "Position of the employee in the company.",
                  "example": "Software Engineer"
                },
                "salary": {
                  "type": "number",
                  "description": "Salary of the employee.",
                  "example": 60000
                },
                "hire_date": {
                  "type": "string",
                  "description": "Hire date of the employee.",
                  "example": "2023-01-01"
                },
                "department": {
                  "type": "string",
                  "description": "Department where the employee works.",
                  "example": "Engineering"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["write:store"]
          }
        ]
      },
      "delete": {
        "tags": [
          "Employees"
        ],
        "description": "Delete an employee by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the employee to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["write:store"]
          }
        ]
      }
    },
    "/clients/": {
      "get": {
        "tags": [
          "Clients"
        ],
        "description": "Retrieve a list of clients.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["read:store"]
          }
        ]
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "description": "Create a new client.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Client data to be created.",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "First name of the client.",
                  "example": "Jane"
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name of the client.",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "description": "Email address of the client.",
                  "example": "jane.doe@example.com"
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number of the client.",
                  "example": "+987654321"
                },
                "address": {
                  "type": "string",
                  "description": "Address of the client.",
                  "example": "123 Main St"
                },
                "registered_at": {
                  "type": "string",
                  "description": "Registration date of the client.",
                  "example": "2023-01-01"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["write:store"]
          }
        ]
      }
    },
    "/clients/{id}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "description": "Retrieve a specific client by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the client to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["read:store"]
          }
        ]
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "description": "Update an existing client by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the client to update."
          },
          {
            "name": "body",
            "in": "body",
            "description": "Client data to be updated.",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "First name of the client.",
                  "example": "Jane"
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name of the client.",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "description": "Email address of the client.",
                  "example": "jane.doe@example.com"
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number of the client.",
                  "example": "+987654321"
                },
                "address": {
                  "type": "string",
                  "description": "Address of the client.",
                  "example": "123 Main St"
                },
                "registered_at": {
                  "type": "string",
                  "description": "Registration date of the client.",
                  "example": "2023-01-01"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["write:store"]
          }
        ]
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "description": "Delete a client by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the client to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["write:store"]
          }
        ]
      }
    }
  }
}
